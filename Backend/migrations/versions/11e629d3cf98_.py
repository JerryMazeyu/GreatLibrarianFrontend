"""empty message

Revision ID: 11e629d3cf98
Revises: 
Create Date: 2024-01-29 15:58:57.770196

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '11e629d3cf98'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tb_user',
    sa.Column('user_id', sa.String(length=30), nullable=False),
    sa.Column('user_name', sa.String(length=30), nullable=True),
    sa.Column('user_tel', sa.String(length=30), nullable=True),
    sa.Column('user_email', sa.String(length=30), nullable=True),
    sa.Column('user_password', sa.String(length=30), nullable=False),
    sa.Column('user_IP', sa.String(length=30), nullable=True),
    sa.Column('user_iconUrl', sa.String(length=80), nullable=True),
    sa.Column('user_authToken', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('user_tel')
    )
    op.create_table('tb_APIKey',
    sa.Column('AK_id', sa.String(length=30), nullable=False),
    sa.Column('AK_name', sa.String(length=30), nullable=True),
    sa.Column('AK_value', sa.String(length=30), nullable=True),
    sa.Column('AK_auth', sa.String(length=30), nullable=True),
    sa.Column('AK_type', sa.String(length=30), nullable=True),
    sa.Column('userid', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['tb_user.user_id'], ),
    sa.PrimaryKeyConstraint('AK_id')
    )
    op.create_table('tb_DataSet',
    sa.Column('DS_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('DS_name', sa.String(length=30), nullable=True),
    sa.Column('DS_info', sa.String(length=200), nullable=True),
    sa.Column('DS_url', sa.String(length=80), nullable=True),
    sa.Column('userid', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['tb_user.user_id'], ),
    sa.PrimaryKeyConstraint('DS_id')
    )
    op.create_table('tb_Project',
    sa.Column('project_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_name', sa.String(length=80), nullable=True),
    sa.Column('project_info', sa.String(length=200), nullable=True),
    sa.Column('userId', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['tb_user.user_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('tb_friendship',
    sa.Column('fs_Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userid', sa.String(length=30), nullable=False),
    sa.Column('friend_token', sa.String(length=30), nullable=False),
    sa.Column('friend_state', sa.Integer(), nullable=False),
    sa.Column('createTime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userid'], ['tb_user.user_id'], ),
    sa.PrimaryKeyConstraint('fs_Id')
    )
    op.create_table('tb_ProjectAPIKey',
    sa.Column('Project_APIKey_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Pid', sa.Integer(), nullable=True),
    sa.Column('AKid', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['AKid'], ['tb_APIKey.AK_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['Pid'], ['tb_Project.project_id'], ),
    sa.PrimaryKeyConstraint('Project_APIKey_id')
    )
    op.create_table('tb_ProjectDataSet',
    sa.Column('Project_DataSet_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Pid', sa.Integer(), nullable=True),
    sa.Column('DSid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['DSid'], ['tb_DataSet.DS_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['Pid'], ['tb_Project.project_id'], ),
    sa.PrimaryKeyConstraint('Project_DataSet_id')
    )
    op.create_table('tb_TestProject',
    sa.Column('tP_id', sa.String(length=30), nullable=False),
    sa.Column('tP_name', sa.String(length=30), nullable=True),
    sa.Column('tP_time', sa.DateTime(), nullable=True),
    sa.Column('tP_status', sa.Integer(), nullable=True),
    sa.Column('tP_progress', sa.Float(), nullable=True),
    sa.Column('tP_configURL', sa.String(length=80), nullable=True),
    sa.Column('Pid', sa.Integer(), nullable=True),
    sa.Column('AK1', sa.String(length=30), nullable=True),
    sa.Column('AK2', sa.String(length=30), nullable=True),
    sa.Column('DS', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AK1'], ['tb_APIKey.AK_id'], ),
    sa.ForeignKeyConstraint(['AK2'], ['tb_APIKey.AK_id'], ),
    sa.ForeignKeyConstraint(['DS'], ['tb_DataSet.DS_id'], ),
    sa.ForeignKeyConstraint(['Pid'], ['tb_Project.project_id'], ),
    sa.PrimaryKeyConstraint('tP_id')
    )
    op.create_table('tb_QA',
    sa.Column('QA_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('QA_time', sa.DateTime(), nullable=True),
    sa.Column('QA_question', sa.String(length=80), nullable=True),
    sa.Column('QA_answer', sa.String(length=200), nullable=True),
    sa.Column('QA_score', sa.Float(), nullable=True),
    sa.Column('QA_thread', sa.Integer(), nullable=True),
    sa.Column('QA_field', sa.String(length=80), nullable=True),
    sa.Column('TPid', sa.String(length=30), nullable=True),
    sa.Column('uid', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['TPid'], ['tb_TestProject.tP_id'], ),
    sa.ForeignKeyConstraint(['uid'], ['tb_user.user_id'], ),
    sa.PrimaryKeyConstraint('QA_id')
    )
    op.create_table('tb_TestProjectUser',
    sa.Column('tPU_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('TPid', sa.String(length=30), nullable=True),
    sa.Column('uid', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['TPid'], ['tb_TestProject.tP_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uid'], ['tb_user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tPU_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tb_TestProjectUser')
    op.drop_table('tb_QA')
    op.drop_table('tb_TestProject')
    op.drop_table('tb_ProjectDataSet')
    op.drop_table('tb_ProjectAPIKey')
    op.drop_table('tb_friendship')
    op.drop_table('tb_Project')
    op.drop_table('tb_DataSet')
    op.drop_table('tb_APIKey')
    op.drop_table('tb_user')
    # ### end Alembic commands ###
